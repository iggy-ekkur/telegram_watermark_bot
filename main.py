import asyncio
import logging
from pathlib import Path

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage

from bot.config import TOKEN
from bot.handlers import base, handle_photos, post_confirm

# ‚¨áÔ∏è –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
from bot.utils.add_watermark import _load_font  # –¥–∞, –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å (—ç—Ç–æ –Ω–µ "–ø—Ä–∏–≤–∞—Ç–Ω–æ" –≤ Python)

# ---- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ------------------------------------------------------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    datefmt="%H:%M:%S",
)
log = logging.getLogger("bot")

# ---- –•—É–∫–∏ –∑–∞–ø—É—Å–∫–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ -------------------------------------------------
async def on_startup(bot: Bot):
    me = await bot.get_me()
    log.info(f"‚úÖ –ó–∞–ø—É—â–µ–Ω –±–æ—Ç @{me.username} (id={me.id})")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ä–∏—Ñ—Ç–∞: –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å ‚Äî –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥—ë–º, –Ω–∞–ø–∏—à–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    try:
        font = _load_font(40)
        font_info = getattr(font, "path", None) or "Pillow default"
        log.info(f"üÖµ –®—Ä–∏—Ñ—Ç –¥–ª—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞: {font_info}")
    except Exception as e:
        log.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —à—Ä–∏—Ñ—Ç: {e}")

    # –ü—Ä–∏–º–µ—Ä: —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
    data_dir = Path(__file__).resolve().parent / "data"
    if not data_dir.exists():
        try:
            data_dir.mkdir(parents=True, exist_ok=True)
            log.info(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {data_dir}")
        except Exception as e:
            log.warning(f"‚ö†Ô∏è –ù–µ –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å {data_dir}: {e}")

async def on_shutdown(bot: Bot):
    try:
        me = await bot.get_me()
        log.info(f"üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ @{me.username}")
    except Exception:
        pass
    # aiogram —Å–∞–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–µ—Å—Å–∏–∏, –Ω–æ –º–æ–∂–Ω–æ —è–≤–Ω–æ:
    await bot.session.close()
    log.info("‚úÖ –°–µ—Å—Å–∏—è Telegram –∑–∞–∫—Ä—ã—Ç–∞. –î–æ —Å–≤—è–∑–∏!")

# ---- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ------------------------------------------------------------
async def main():
    bot = Bot(
        token=TOKEN,
        default=DefaultBotProperties(parse_mode="HTML")  # –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π HTML –≤–µ–∑–¥–µ
    )
    dp = Dispatcher(storage=MemoryStorage())

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(base.router)
    dp.include_router(handle_photos.router)
    dp.include_router(post_confirm.router)

    # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)

    log.info("üöÄ –°—Ç–∞—Ä—Ç—É–µ–º polling‚Ä¶")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        log.info("üßπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ —Å–∏–≥–Ω–∞–ª—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚Ä¶")
    except Exception:
        log.exception("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ:")
